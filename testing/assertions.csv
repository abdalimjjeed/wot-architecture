"ID","Status","Comment","Assertion"
"arch-td-metadata","null","not testable with Assertion Tester","In W3C WoT, the description metadata for a Thing instance MUST be available as a WoT Thing Description (TD) [[?WOT-THING-DESCRIPTION]]."
"arch-td-consumers-process","null","not testable with Assertion Tester","Consumers MUST be able to parse and process the TD representation format, which is based on JSON [[!RFC8259]]."
"arch-other-thing-representations","null","not testable with Assertion Tester","There MAY be other representations of a Thing such as an HTML-based user interface, simply an image of the physical entity, or even non-Web representations in closed systems."
"arch-td-mandatory","null","not testable with Assertion Tester","To be considered a Thing, however, at least one TD representation MUST be available."
"arch-td-linking","null","not testable with Assertion Tester","WoT Thing Descriptions MAY link to other Things and other resources on the Web to form a Web of Things."
"arch-id-correlation","null","not testable with Assertion Tester","An identifier in the WoT Thing Description MUST allow for the correlation of multiple TDs representing the same original Thing or ultimately unique physical entity."
"arch-thing-bundling","null","not testable with Assertion Tester","Things MAY be bundled together with a Consumer to enable Thing-to-Thing interaction."
"arch-consumer-configuration","null","not testable with Assertion Tester","The configuration of the Consumer behavior MAY be exposed through the Thing."
"arch-affordances","null","not testable with Assertion Tester","In addition to navigation affordances (i.e., Web links), Things MAY offer three other types of Interaction Affordances defined by this specification: Properties, Actions, and Events."
"arch-property-readable","null","not testable with Assertion Tester","The state exposed by a Property MUST be retrievable (readable)."
"arch-property-writable","null","not testable with Assertion Tester","Optionally, the state exposed by a Property MAY be updated (writeable)."
"arch-property-observable","null","not testable with Assertion Tester","Things MAY choose to make Properties observable by pushing the new state after a change (cf. Observing Resources [[?RFC7641]])."
"arch-property-dataschema","null","not testable with Assertion Tester","If the data is not fully specified by the Protocol Binding used (e.g., through a media type), Properties MAY contain one data schema for the exposed state."
"arch-action-functions","null","not testable with Assertion Tester","An Action MAY manipulate state that is not directly exposed (cf. Properties), manipulate multiple Properties at a time, or manipulate Properties based on internal logic (e.g., toggle)."
"arch-action-process","null","not testable with Assertion Tester","Invoking an Action MAY also trigger a process on the Thing that manipulates state (including physical state through actuators) over time."
"arch-action-dataschema","null","not testable with Assertion Tester","If the data is not fully specified by the Protocol Binding used (e.g., through a media type), Actions MAY contain data schemas for optional input parameters and output results."
"arch-event-trigger","null","not testable with Assertion Tester","Events MAY be triggered through conditions that are not exposed as Properties."
"arch-event-dataschema","null","not testable with Assertion Tester","If the data is not fully specified by the Protocol Binding used (e.g., through a media type), Events MAY contain data schemas for the event data and possible subscription control messages (e.g., to subscribe with a Webhook callback URI)."
"arch-rel-types","null","not testable with Assertion Tester","Extension relation types MUST be compared as strings using a case-insensitive comparison. (If they are serialized in a different format they are to be converted to URIs)."
"arch-rel-type-lowercase","null","not testable with Assertion Tester","Nevertheless, all-lowercase URIs SHOULD be used for extension relation types. [[!RFC8288]]"
"arch-form-iris","null","not testable with Assertion Tester","Form contexts and submission targets MUST both be Internationalized Resource Identifiers (IRIs) [[!RFC3987]]."
"arch-form-iris2","null","not testable with Assertion Tester","Form context and submission target MAY point to the same resource or different resources, where the submission target resource implements the operation for the context."
"arch-op-wellknown","null","not testable with Assertion Tester","Well-known operation types MUST follow the ABNF LOALPHA *( LOALPHA / DIGIT / ""."" / ""-"" )."
"arch-op-wellknown-compare","null","not testable with Assertion Tester","Well-known operation types MUST be compared using a case-insensitive comparison."
"arch-op-extension","null","not testable with Assertion Tester","The set of predefined operation types MAY be augmented by Extension operation types chosen by applications."
"arch-op-extension-uri","null","not testable with Assertion Tester","Extension operation types MUST be URIs [[!RFC3986]] that uniquely identify the type."
"arch-op-extension-comparison","null","not testable with Assertion Tester","Extension operation types MUST be compared as strings using a case-insensitive comparison."
"arch-op-extension-lowercase","null","not testable with Assertion Tester","Nevertheless, all-lowercase URIs SHOULD be used for extension operation types."
"arch-op-request-method","null","not testable with Assertion Tester","The request method MUST identify one method of the standard set of the protocol identified by the submission target URI scheme."
"arch-op-expected-request","null","not testable with Assertion Tester","Form fields are optional and MAY further specify the expected request message for the given operation."
"arch-op-form-fields-protocol","null","not testable with Assertion Tester","Form fields MAY depend on the protocol used for the submission target as specified in the URI scheme."
"arch-hypermedia","null","not testable with Assertion Tester","Interaction Affordances MUST include one or more Protocol Bindings."
"arch-hypermedia-protocol-binding","null","not testable with Assertion Tester","Protocol Bindings MUST be serialized as hypermedia controls to be self-descriptive on how to activate the Interaction Affordance."
"arch-hypermedia-origin","null","not testable with Assertion Tester","The hypermedia controls MUST originate from the authority managing the Thing that is providing the corresponding Interaction Affordance."
"arch-hypermedia-caching","null","not testable with Assertion Tester","The hypermedia controls MAY be cached outside the Thing and used for offline processing if caching metadata is available to determine the freshness."
"arch-uri-scheme","null","not testable with Assertion Tester","Eligible protocols for W3C WoT MUST have an associated URI scheme [[!RFC3986]] that is registered with IANA (see [[?IANA-URI-SCHEMES]])."
"arch-methods","null","not testable with Assertion Tester","Eligible protocols for W3C WoT MUST be based on a standard set of methods that are known a priori."
"arch-media-type","null","not testable with Assertion Tester","All data (a.k.a. content) exchanged when activating Interaction Affordances MUST be identified by a media type [[!RFC2046]] in the Protocol Binding."
"arch-media-type-extra","null","not testable with Assertion Tester","Protocol Bindings MAY have additional information that specifies representation formats in more detail than the media type alone."
"arch-schema","null","not testable with Assertion Tester","Thus, the corresponding Interaction Affordances SHOULD declare a data schema to provide more detailed syntactic metadata for the data exchanged."
"arch-intermediary-td-extra-protocols","null","not testable with Assertion Tester","If necessary, a TD generated by an Intermediary MAY contain interfaces for other communication protocols."
"arch-discovery-no-metadata-in-introduction","null","not testable with Assertion Tester","Any introduction mechanism used for WoT Discovery MUST NOT provide metadata but instead should simply result in one or more opaque URLs at which metadata may be accessed, if and only if the user can authenticate and has the appropriate authorization (access rights)."
"arch-discovery-no-metadata-in-introduction-urls","null","not testable with Assertion Tester","Introduction URLs MUST NOT themselves include any metadata, e.g. a human-readable device type or name."
"arch-discovery-metadata-after-authorization","null","not testable with Assertion Tester","Any WoT Discovery ""exploration"" implementation MUST only provide metadata and TDs after appropriate best-practice authentication and authorization."
"arch-discovery-should-use-standard","null","not testable with Assertion Tester","Whenever possible, the Discovery mechanisms defined in [[!WOT-DISCOVERY]] SHOULD be used to distribute TDs."
